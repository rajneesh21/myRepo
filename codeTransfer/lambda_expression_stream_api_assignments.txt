1) Write a lambda expression which accepts x and y numbers and return x ^ y.

2) Write a method that uses lambda expression to accept username and password and return true or false. (Hint: Use any custom values for username and password for authentication).

3) Create following classes.

public class Trader {
 
    private String name;
    private String city;

     // Add constructors, setter, getter and toString() methods
}

public class Transaction {

    private Trader trader;
    private int year;
    private int value;

    // Add constructors, setter, getter and toString() methods 
}

Use below Raw Data:

Trader raoul = new Trader("Raoul", "Cambridge");
Trader mario = new Trader("Mario","Milan");
Trader alan = new Trader("Alan","Cambridge");
Trader brian = new Trader("Brian","Cambridge");

List<Transaction> transactions = Arrays.asList(
	new Transaction(brian, 2011, 300),
	new Transaction(raoul, 2012, 1000),
	new Transaction(raoul, 2011, 400),
	new Transaction(mario, 2012, 710),
	new Transaction(mario, 2012, 700),
	new Transaction(alan, 2012, 950)
      );


Problems:
-------------

1. Find all transactions in the year 2011 and sort them by value (small to high).

2. What are all the unique cities where the traders work?

3. Find all traders from Cambridge and sort them by name.

4. Return a string of all traders’ names sorted alphabetically.

5. Are any traders based in Milan?

6. Print all transactions’ values from the traders living in Cambridge.

7. What’s the highest value of all the transactions?

8. Find the transaction with the smallest value.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

4) Create following classes

public class Fruit { 
    private String name; 
    private int calories; 
    private int price; 
    private String color; 

     // Add constructors, setter, getter and toString() methods
}
public class News { 
    private int newsId; 
    private String postedByUser; 
    private String commentByUser; 
    private String comment; 
 
    // Add constructors, setter, getter and toString() methods
}

Note:-  Create your own sample data for above classes.

1. Display the fruit names of low calories fruits i.e. calories < 100 sorted in descending order of calories.

2. Display color wise list of fruit names.

3. Display only RED color fruits sorted as per their price in ascending order.

4. Find out the newsId which has received maximum comments.

5. Find out how many times the word 'budget' arrived in user comments all news.

6. Find out which user has posted maximum comments.

7. Display commentByUser wise number of comments.


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

5) Find how many even numbers are there between 1 to 200 using stream api.
(Hint:  Use IntStream.rangeClosed() method)

6) Find sum of elements of an array using stream.

    int numbers [] = { 19, 45, 78, 23, 66, 89, 90, 123 }; 
  